services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: arcade_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: arcade_platform
      MYSQL_USER: arcade_user
      MYSQL_PASSWORD: arcade_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - arcade_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: arcade_redis_dev
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123456
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - arcade_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10

  # 后端API服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: arcade_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      SOCKET_PORT: 5001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: arcade_platform
      DB_USER: arcade_user
      DB_PASSWORD: arcade_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123456
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - arcade_network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      timeout: 30s
      retries: 5
      start_period: 40s

  # 前端React应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: arcade_frontend_dev
    restart: unless-stopped
    environment:
      CHOKIDAR_USEPOLLING: true
      GENERATE_SOURCEMAP: true
      REACT_APP_API_BASE_URL: http://localhost:5000
      REACT_APP_SOCKET_URL: http://localhost:5001
      REACT_APP_APP_NAME: 经典街机游戏平台
      REACT_APP_DEFAULT_THEME: dark
      REACT_APP_DEBUG: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - arcade_network
    stdin_open: true
    tty: true

volumes:
  mysql_dev_data:
  redis_dev_data:
  backend_node_modules:
  frontend_node_modules:
  backend_uploads:
  backend_logs:

networks:
  arcade_network:
    driver: bridge 